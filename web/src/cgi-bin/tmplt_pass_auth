#!/bin/bash

###############################
# auth for PassCode APP
###############################
IP_whitelisting=%%IP_whitelisting

# set persistence option
IP_persistence="no"
User_agent_persistence="yes"

#read posted param 
input=$(dd bs=${CONTENT_LENGTH} 2>/dev/null | cat -)

# load authkey
authkey="%%authkey"

echo "Content-Type: text/html"
echo ""

# load small-shell conf
. %%www/descriptor/.small_shell_conf

# load header
if [ "$IP_persistence" = "yes" ];then
  remote_addr=$(echo "$REMOTE_ADDR" | $SED "s/:/-/g")
else
  logging_IP=$(echo "$REMOTE_ADDR" | $SED "s/:/-/g")
fi
if [ "$User_agent_persistence" = "yes" ];then
  user_agent=$(echo "$HTTP_USER_AGENT" | $SED "s/:/-/g" | $SED "s/ /_/g")
fi

param=$(date +%s)
param="$param:$RANDOM"
count=1
while [ -f %%www/tmp/${param} ]
do
 sleep 0.01
 count=$(expr $count + 1)
 if [ $count -eq 100 ];then
   echo "error: please contact to adimin"
   exit 1
 fi
done

# parse QUERY STRING
echo "$QUERY_STRING" | $PHP -r "echo urldecode(file_get_contents('php://stdin'));" | $SED "s/\&/\n/g" > %%www/tmp/${param}

# parse POST param
echo "$input" | $SED "s/&/\n/g"  | $SED -r "s/%%app_pass(.*)=/received_pass=/g" \
| $PHP -r "echo urldecode(file_get_contents('php://stdin'));"  >> %%www/tmp/${param}
cat %%www/tmp/${param} | $SED -e "s/=/=\"/1" | $SED "s/$/\"/g" | $SED "s/^\"//g" |  tr -d \$ | tr -d \` > %%www/tmp/${param}.load

chmod 755 %%www/tmp/${param}.load

# load query string and POSTED params
.  %%www/tmp/${param}.load
rm  %%www/tmp/${param}*

# render auth form
if [ ! "$received_pass" ];then

  if [ "$req" ];then
    req="?req=$(echo "$req")"
  fi

  if [ "$id" ];then
    id="\&id=$(echo "$id")"
  fi

  if [ "$message" ];then
    message="<p><b>$(echo "$message")<\/b><\/p>"
  fi

  # render standard login form with queyr string and messge
  cat %%www/descriptor/%%app_auth_form.html.def | $SED -r "s/^( *)</</1" \
  | $SED "/%%auth_form_menu/r %%www/descriptor/common_parts/%%app_auth_form_menu" \
  | $SED "s/%%auth_form_menu//g"\
  | $SED "/%%footer/r %%www/descriptor/common_parts/%%app_footer" \
  | $SED "/%%footer/d"\
  | $SED "s/%%message/${message}/g" \
  | $SED "s/?%%params/${req}${id}/g"
  exit 0
fi


# Authentication 
if [ "$received_pass" ];then

  pass_code_chk=$(${small_shell_path}/bin/meta get.shared_pass:%%app | grep "^${received_pass}$")

  if [ "$pass_code_chk" ];then
    # use app authkey for session controll
    auth_req=$(${small_shell_path}/bin/extension_auth app:%%app key_auth:${authkey} \
    remote_addr:${remote_addr} user_agent:${user_agent} logging_IP:${logging_IP})
    session=$(echo "$auth_req" | $AWK -F "," '{print $2}' | $AWK -F ":" '{print $2}')
    pin=$(echo "$auth_req" | $AWK -F "," '{print $3}' | $AWK -F ":" '{print $2}')
   
    if [ "$session" -a "$pin" ];then
      if [ ! "$req" ];then
        req=main
      fi

      # redirect to APP if auth is OK
      if [[ $req == *table ]];then
        echo "<meta http-equiv=\"refresh\" content=\"0; url=./%%app?session=$session&pin=$pin&req=${req}\">"
      elif [[ $req == *get || $req == *log_viewer ]];then
        echo "<meta http-equiv=\"refresh\" content=\"0; url=./%%app?session=$session&pin=$pin&req=$req&id=${id}\">"
      else
        echo "<meta http-equiv=\"refresh\" content=\"0; url=./%%app?session=$session&pin=$pin&req=${req}\">"
      fi
    else
      echo "error: internal key authentication failure"
    fi

  else
    # render standard login form with error message
    cat %%www/descriptor/%%app_auth_form.html.def | $SED -r "s/^( *)</</1" \
    | $SED "s/%%message/<p><b>! Pass code is wrong<\/b><\/p>/g" \
    | $SED "/%%auth_form_menu/r %%www/descriptor/common_parts/%%app_auth_form_menu" \
    | $SED "s/%%auth_form_menu//g"\
    | $SED "/%%footer/r %%www/descriptor/common_parts/%%app_footer" \
    | $SED "/%%footer/d"\
    | $SED "s/?%%params//g"
    exit 1
 fi
fi

