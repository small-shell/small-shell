#!/bin/bash

#----------------------------------------------------------
# usage: ./bkup $backup_directory
#----------------------------------------------------------

WHOAMI=`whoami`
if [ ! "$WHOAMI" = "root" ];then
  echo "error: user must be root"
  exit 1
fi

# global conf load
SCRIPT_DIR=`dirname $0`
. ${SCRIPT_DIR}/../global.conf

# load web/base
. $ROOT/web/base

# load param
bkup_dir=$1

if [ ! "$bkup_dir" ];then
   echo "error: please input backup direcotry \"./bkup \$backup_directory\""
   exit 1
fi

if [ ! -d $bkup_dir ];then
   echo "error: backup_directory{$bkup_dir} seems wrong"
   exit 1
fi

# disk util check
disk_usage=`df -k $bkup_dir | grep -v Avail | awk '{print $4}'`
small_shell_size=`du -sk $ROOT | awk '{print $1}'`

if [ $small_shell_size -gt $disk_usage ];then
  echo -n "error: disk of $bkup_dir is not enough"
  exit 1
fi

# backup small-shell core
(cd $ROOT/../ && tar -Jcf $bkup_dir/${server}.core.tar.xz small-shell)
result=$?
if [ ! $result -eq 0 ];then
  echo "warn: something seems wrong for making backup of small-shell core"
fi

# backuip apps
target_www=`echo $www | xargs basename -a`

if [ "$cgidir" = "/var/www/cgi-bin" ];then
  (cd ${www}/../ && tar -Jcf $bkup_dir/${server}.www.tar.xz $target_www)
else
  target_cgi=`echo $cgidir | xargs basename -a`
  (cd ${www}/../ && tar -Jcf $bkup_dir/${server}.www.tar.xz $target_www)
  (cd ${www}/../ && tar -Jcf $bkup_dir/${server}.cgi.tar.xz $target_cgi)
fi

# backup key
if [ -d "/home/small-shell/.ssh" ];then
  (cd /home/small-shell && tar -Jcf $bkup_dir/${server}.ssh.tar.xz .ssh)
fi

echo "backup completed, please check $bkup_dir"

exit 0
